% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{cells_grand_summary}
\alias{cells_grand_summary}
\title{Location helper for targeting cells in a grand summary}
\usage{
cells_grand_summary(columns = everything(), rows = everything())
}
\arguments{
\item{columns}{\emph{Columns to target}

\verb{<column-targeting expression>} // \emph{default:} \code{everything()}

The columns to which targeting operations are constrained. Can either
be a series of column names provided in \code{c()}, a vector of column indices,
or a select helper function (e.g. \code{\link[=starts_with]{starts_with()}}, \code{\link[=ends_with]{ends_with()}},
\code{\link[=contains]{contains()}}, \code{\link[=matches]{matches()}}, \code{\link[=num_range]{num_range()}}, and \code{\link[=everything]{everything()}}).}

\item{rows}{\emph{Rows to target}

\verb{<row-targeting expression>} // \emph{default:} \code{everything()}

In conjunction with \code{columns}, we can specify which of their rows should
form a constraint for targeting operations. The default \code{\link[=everything]{everything()}}
results in all rows in \code{columns} being formatted. Alternatively, we can
supply a vector of row IDs within \code{c()}, a vector of row indices, or a
select helper function (e.g. \code{\link[=starts_with]{starts_with()}}, \code{\link[=ends_with]{ends_with()}}, \code{\link[=contains]{contains()}},
\code{\link[=matches]{matches()}}, \code{\link[=num_range]{num_range()}}, and \code{\link[=everything]{everything()}}). We can also use expressions to
filter down to the rows we need (e.g., \verb{[colname_1] > 100 & [colname_2] < 50}).}
}
\value{
A list object with the classes \code{cells_grand_summary} and
\code{location_cells}.
}
\description{
\code{cells_grand_summary()} is used to target the cells in a grand
summary and it is useful when applying a footnote with \code{\link[=tab_footnote]{tab_footnote()}} or
adding custom styles with \code{\link[=tab_style]{tab_style()}}. The function is expressly used in
each of those functions' \code{locations} argument. The 'grand_summary' location
is generated by \code{\link[=grand_summary_rows]{grand_summary_rows()}}.
}
\section{Targeting cells with \code{columns} and \code{rows}}{


Targeting of grand summary cells is done through the \code{columns} and \code{rows}
arguments. The \code{columns} argument allows us to target a subset of grand
summary cells contained in the resolved columns. We say resolved because
aside from declaring column names in \code{c()} (with bare column names or names
in quotes) we can use \strong{tidyselect}-style expressions. This can be as basic
as supplying a select helper like \code{starts_with()}, or, providing a more
complex incantation like

\code{where(~ is.numeric(.x) && max(.x, na.rm = TRUE) > 1E6)}

which targets numeric columns that have a maximum value greater than
1,000,000 (excluding any \code{NA}s from consideration).

Once the columns are targeted, we may also target the \code{rows} of the grand
summary. Grand summary cells in the stub will have ID values that can be used
much like column names in the \code{columns}-targeting scenario. We can use
simpler \strong{tidyselect}-style expressions (the select helpers should work well
here) and we can use quoted row identifiers in \code{c()}. It's also possible to
use row indices (e.g., \code{c(3, 5, 6)}) that correspond to the row number of a
grand summary row.
}

\section{Examples}{


Use a portion of the \code{\link{countrypops}} dataset to create a \strong{gt} table. Add
some styling to a grand summary cells with \code{\link[=tab_style]{tab_style()}} and
\code{cells_grand_summary()} in the \code{locations} argument.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{countrypops |>
  dplyr::filter(country_name == "Spain", year < 1970) |>
  dplyr::select(-contains("country")) |>
  gt(rowname_col = "year") |>
  fmt_number(
    columns = population,
    decimals = 0
  ) |>
  grand_summary_rows(
    columns = population,
    fns = change ~ max(.) - min(.),
    fmt = ~ fmt_integer(.)
  ) |>
  tab_style(
    style = list(
      cell_text(style = "italic"),
      cell_fill(color = "lightblue")
    ),
    locations = cells_grand_summary(
      columns = population,
      rows = 1
    )
  )
}\if{html}{\out{</div>}}

\if{html}{\out{
<img src="https://raw.githubusercontent.com/rstudio/gt/master/images/man_cells_grand_summary_1.png" alt="This image of a table was generated from the first code example in the `cells_grand_summary()` help file." style="width:100\%;">
}}
}

\section{Function ID}{

8-19
}

\section{Function Introduced}{

\code{v0.2.0.5} (March 31, 2020)
}

\seealso{
Other location helper functions: 
\code{\link{cells_body}()},
\code{\link{cells_column_labels}()},
\code{\link{cells_column_spanners}()},
\code{\link{cells_footnotes}()},
\code{\link{cells_row_groups}()},
\code{\link{cells_source_notes}()},
\code{\link{cells_stub}()},
\code{\link{cells_stub_grand_summary}()},
\code{\link{cells_stub_summary}()},
\code{\link{cells_stubhead}()},
\code{\link{cells_summary}()},
\code{\link{cells_title}()},
\code{\link{location-helper}}
}
\concept{location helper functions}
