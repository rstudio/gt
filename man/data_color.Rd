% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_color.R
\name{data_color}
\alias{data_color}
\title{Set data cell colors using a palette or a color function}
\usage{
data_color(data, columns, colors, alpha = NULL, apply_to = "bkgd",
  autocolor_text = TRUE)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{columns}{the columns wherein changes to cell data colors should occur.}

\item{colors}{either a color mapping function from the \code{scales} package
or a vector of colors to use for each distinct value or level in each of
the provided \code{columns}. The color mapping functions are:
\code{scales::col_quantile()}, \code{scales::col_bin()},
\code{scales::col_numeric()}, and \code{scales::col_factor()}. If providing
a vector of colors as a palette, each color value provided must either be a
color name (in the set of colors provided by \code{grDevices::colors()}) or
hexadecimal strings in the form of "#RRGGBB" or "#RRGGBBAA".}

\item{alpha}{an optional, fixed alpha transparency value that will be applied
to all of the \code{colors} provided if they are provided as a vector of
colors. If using a colorizing helper function for \code{colors} then this
option is ignored (each of the colorizing helper functions has its own
\code{alpha} argument).}

\item{apply_to}{which style element should the colors be applied to? Options
include the cell background (the default, given as \code{bkgd}) or the cell
text (\code{text}).}

\item{autocolor_text}{an option to let \code{gt} modify the coloring of text
within cells undergoing background coloring. This will in some cases yield
more optimal text-to-background color contrast. By default, this is set to
\code{TRUE}.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
It's possible to add color to data cells according to their values. The
\code{data_color()} function colors all rows of any \code{columns} supplied.
There are two ways to define how cells are colored: (1) through the use of a
supplied color palette, and (2) through use of a color mapping function
available from the \code{scales} package. The first method colorizes cell
data according to whether values are character or numeric. The second method
provides more control over how cells are colored since we provide an explicit
color function and thus other requirements such as bin counts, cut points, or
a numeric domain. Finally, we can choose whether to apply the cell-specific
colors to either the cell background or the cell text. By default, gt will
choose the ideal text color (for maximal contrast) when colorizing the
background of data cells.
}
\section{Figures}{

\if{html}{\figure{man_data_color_1.svg}{options: width=100\%}}
}

\examples{
# Use `countrypops` to create a gt table;
# Apply a color scale to the `population`
# column with `scales::col_numeric`,
# four supplied colors, and a domain
tab_1 <-
  countrypops \%>\%
  dplyr::filter(country_name == "Mongolia") \%>\%
  dplyr::select(-contains("code")) \%>\%
  tail(10) \%>\%
  gt() \%>\%
  data_color(
    columns = vars(population),
    colors = scales::col_numeric(
      palette = c(
        "red", "orange", "green", "blue"),
      domain = c(0.2E7, 0.4E7))
  )

}
\seealso{
Other data formatting functions: \code{\link{fmt_currency}},
  \code{\link{fmt_datetime}}, \code{\link{fmt_date}},
  \code{\link{fmt_missing}}, \code{\link{fmt_number}},
  \code{\link{fmt_passthrough}}, \code{\link{fmt_percent}},
  \code{\link{fmt_scientific}}, \code{\link{fmt_time}},
  \code{\link{fmt}}, \code{\link{text_transform}}
}
\concept{data formatting functions}
