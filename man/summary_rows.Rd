% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_rows.R
\name{summary_rows}
\alias{summary_rows}
\title{Add summary rows using aggregation functions}
\usage{
summary_rows(data, groups = NULL, columns = NULL, funs,
  formatter = fmt_number, ...)
}
\arguments{
\item{data}{a table object that is created using the \code{gt()} function.}

\item{groups}{the stub block groups heading names for which summary rows
will be added.}

\item{columns}{the columns for which the summaries should be calculated. If
nothing is provided, then the supplied aggregation functions will be applied
to all columns.}

\item{funs}{functions used for aggregations. This can include base functions
like \code{mean}, \code{min}, \code{max}, \code{median}, \code{sd}, or
\code{sum}. The functions should be supplied using the \code{\link{funs}()}
helper function. With \code{funs()}, we can specify the functions by use of
function names (e.g., \code{"sum"}), the functions themselves
(e.g., \code{sum}), or calls to functions with \code{.} as a dummy argument
(e.g., \code{sum(., na.rm = TRUE)}).}

\item{formatter}{a formatter function name. These can be any of the
\code{fmt_*}functions available in the package (e.g.,
\code{\link{fmt_number}}, \code{link{fmt_percent}}, etc.), or a custom
function using \code{\link{fmt}()}. The default function is
\code{\link{fmt_number}()} and its options can be accessed through
\code{...}.}

\item{...}{values passed to the \code{formatter} function, where the provided
values are to be in the form of named vectors. For example, when using the
default \code{formatter} function, \code{\link{fmt_number}}, options such
as \code{decimals}, \code{use_seps}, and \code{locale} can be used.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
Add summary rows to one or more stub blocks by using the input data already
  provided in the \code{gt()} function alongside any suitable
  aggregation functions. Should we need to obtain the summary data for
  external purposes, the \code{\link{extract_summary}()} can be used with
  a \code{gt_tbl} object where summary rows were added via
\code{summary_rows()}.
}
\examples{
library(tidyverse)

# Create a table that creates a stub and
# stub blocks based on a naming convention
tbl <-
  dplyr::tribble(
    ~groupname, ~rowname, ~value_1, ~value_2,
    "A",        "1",      NA,       260.1,
    "A",        "2",      184.3,    84.4,
    "A",        "3",      342.3,    126.3,
    "A",        "4",      234.9,    NA,
    "B",        "1",      190.9,    832.5,
    "B",        "2",      743.3,    281.2,
    "B",        "3",      252.3,    732.5,
    "B",        "4",      344.7,    NA,
    "C",        "1",      197.2,    818.0,
    "C",        "2",      284.3,    394.4)

# Create a table with summary rows for the
# `A` and `C` groups; the 3 summary rows
# for these groups represent the mean, sum,
# and standard deviation of `value`
gt_tbl <-
  gt(tbl) \%>\%
    summary_rows(
      groups = c("A", "C"),
      columns = vars(value_1),
      funs = funs(
        average = mean(., na.rm = TRUE),
        total = sum(., na.rm = TRUE),
        `std dev` = sd(., na.rm = TRUE)))
}
\concept{row addition functions}
