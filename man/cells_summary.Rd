% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{cells_summary}
\alias{cells_summary}
\title{Location helper for targeting group summary cells}
\usage{
cells_summary(
  groups = everything(),
  columns = everything(),
  rows = everything()
)
}
\arguments{
\item{groups}{The names of the groups that the summary rows reside in.}

\item{columns}{The names of the columns that are to be targeted.}

\item{rows}{The names of the rows that are to be targeted.}
}
\value{
A list object with the classes \code{cells_summary} and \code{location_cells}.
}
\description{
The \code{cells_summary()} function is used to target the cells in a group summary
and it is useful when applying a footnote with \code{\link[=tab_footnote]{tab_footnote()}} or adding a
custom style with \code{\link[=tab_style]{tab_style()}}. The function is expressly used in each of
those functions' \code{locations} argument. The 'summary' location is generated by
the \code{\link[=summary_rows]{summary_rows()}} function.
}
\section{Targeting cells with \code{columns}, \code{rows}, and \code{groups}}{


Targeting of summary cells is done through the \code{groups}, \code{columns}, and
\code{rows} arguments. By default \code{groups} is set to \code{everything()}, which means
that all available groups will be considered. Providing the ID values (in
quotes) of row groups in \code{c()} will serve to constrain the targeting to that
subset of groups.

The \code{columns} argument allows us to target a subset of summary
cells contained in the resolved columns. We say resolved because aside from
declaring column names in \code{c()} (with bare column names or names in quotes)
we can use \strong{tidyselect}-style expressions. This can be as basic as
supplying a select helper like \code{starts_with()}, or, providing a more complex
incantation like

\code{where(~ is.numeric(.x) && max(.x, na.rm = TRUE) > 1E6)}

which targets numeric columns that have a maximum value of 100,000 (excluding
\code{NA}s from consideration).

Once the groups and columns are targeted, we may also target the \code{rows} of
the summary. Summary cells in the stub will have ID values that can be used
much like column names in the \code{columns}-targeting scenario. We can use
simpler \strong{tidyselect}-style expressions (the select helpers should work well
here) and we can use quoted row identifiers in \code{c()}. It's also possible to
use row indices (e.g., \code{c(3, 5, 6)}) that correspond to the row number of a
summary row in a row group (numbering restarts with every row group).
}

\section{Overview of Location Helper Functions}{


Location helper functions can be used to target cells with virtually any
function that has a \code{locations} argument. Here is a listing of all of the
location helper functions, with locations corresponding roughly from top to
bottom of a table:
\itemize{
\item \code{\link[=cells_title]{cells_title()}}: targets the table title or the table subtitle depending on
the value given to the \code{groups} argument (\code{"title"} or \code{"subtitle"}).
\item \code{\link[=cells_stubhead]{cells_stubhead()}}: targets the stubhead location, a cell of which is only
available when there is a stub; a label in that location can be created by
using the \code{\link[=tab_stubhead]{tab_stubhead()}} function.
\item \code{\link[=cells_column_spanners]{cells_column_spanners()}}: targets the spanner column labels with the
\code{spanners} argument; spanner column labels appear above the column labels.
\item \code{\link[=cells_column_labels]{cells_column_labels()}}: targets the column labels with its \code{columns}
argument.
\item \code{\link[=cells_row_groups]{cells_row_groups()}}: targets the row group labels in any available row
groups using the \code{groups} argument.
\item \code{\link[=cells_stub]{cells_stub()}}: targets row labels in the table stub using the \code{rows}
argument.
\item \code{\link[=cells_body]{cells_body()}}: targets data cells in the table body using intersections of
\code{columns} and \code{rows}.
\item \code{\link[=cells_summary]{cells_summary()}}: targets summary cells in the table body using the
\code{groups} argument and intersections of \code{columns} and \code{rows}.
\item \code{\link[=cells_grand_summary]{cells_grand_summary()}}: targets cells of the table's grand summary using
intersections of \code{columns} and \code{rows}
\item \code{\link[=cells_stub_summary]{cells_stub_summary()}}: targets summary row labels in the table stub using
the \code{groups} and \code{rows} arguments.
\item \code{\link[=cells_stub_grand_summary]{cells_stub_grand_summary()}}: targets grand summary row labels in the table
stub using the \code{rows} argument.
\item \code{\link[=cells_footnotes]{cells_footnotes()}}: targets all footnotes in the table footer (cannot be
used with \code{\link[=tab_footnote]{tab_footnote()}}).
\item \code{\link[=cells_source_notes]{cells_source_notes()}}: targets all source notes in the table footer
(cannot be used with \code{\link[=tab_footnote]{tab_footnote()}}).
}

When using any of the location helper functions with an appropriate function
that has a \code{locations} argument (e.g., \code{\link[=tab_style]{tab_style()}}), multiple locations
can be targeted by enclosing several \verb{cells_*()} helper functions in a
\code{list()} (e.g., \code{list(cells_body(), cells_grand_summary())}).
}

\section{Examples}{


Use \code{\link{countrypops}} to create a \strong{gt} table. Add some styling to the summary
data cells with with \code{\link[=tab_style]{tab_style()}}, using \code{cells_summary()} in \code{locations}.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{countrypops \%>\%
  dplyr::filter(country_name == "Japan", year < 1970) \%>\%
  dplyr::select(-contains("country")) \%>\%
  dplyr::mutate(decade = paste0(substr(year, 1, 3), "0s")) \%>\%
  gt(
    rowname_col = "year",
    groupname_col = "decade"
  ) \%>\%
  fmt_number(
    columns = population,
    decimals = 0
  ) \%>\%
  summary_rows(
    groups = "1960s",
    columns = population,
    fns = list("min", "max"),
    fmt = ~ fmt_integer(.)
  ) \%>\%
  tab_style(
    style = list(
      cell_text(style = "italic"),
      cell_fill(color = "lightblue")
    ),
    locations = cells_summary(
      groups = "1960s",
      columns = population,
      rows = 1
    )
  ) \%>\%
  tab_style(
    style = list(
      cell_text(style = "italic"),
      cell_fill(color = "lightgreen")
    ),
    locations = cells_summary(
      groups = "1960s",
      columns = population,
      rows = 2
    )
  )
}\if{html}{\out{</div>}}

\if{html}{\out{
<img src="https://raw.githubusercontent.com/rstudio/gt/master/images/man_cells_summary_1.png" alt="This image of a table was generated from the first code example in the `cells_summary()` help file." style="width:100\%;">
}}
}

\section{Function ID}{

7-13
}

\seealso{
Other helper functions: 
\code{\link{adjust_luminance}()},
\code{\link{cell_borders}()},
\code{\link{cell_fill}()},
\code{\link{cell_text}()},
\code{\link{cells_body}()},
\code{\link{cells_column_labels}()},
\code{\link{cells_column_spanners}()},
\code{\link{cells_footnotes}()},
\code{\link{cells_grand_summary}()},
\code{\link{cells_row_groups}()},
\code{\link{cells_source_notes}()},
\code{\link{cells_stub_grand_summary}()},
\code{\link{cells_stub_summary}()},
\code{\link{cells_stubhead}()},
\code{\link{cells_stub}()},
\code{\link{cells_title}()},
\code{\link{currency}()},
\code{\link{default_fonts}()},
\code{\link{escape_latex}()},
\code{\link{google_font}()},
\code{\link{gt_latex_dependencies}()},
\code{\link{html}()},
\code{\link{md}()},
\code{\link{pct}()},
\code{\link{px}()},
\code{\link{random_id}()},
\code{\link{stub}()}
}
\concept{helper functions}
