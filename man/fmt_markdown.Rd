% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_data.R
\name{fmt_markdown}
\alias{fmt_markdown}
\title{Format Markdown text}
\usage{
fmt_markdown(data, columns, rows = NULL)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{columns}{the columns to format. Can either be a series of column names
provided in \code{vars()}, a vector of column indices, or a helper function
focused on selections. The select helper functions are:
\code{\link{starts_with}()}, \code{\link{ends_with}()},
\code{\link{contains}()}, \code{\link{matches}()}, \code{\link{one_of}()},
and \code{\link{everything}()}.}

\item{rows}{optional rows to format. Not providing any value results in all
rows in \code{columns} being formatted. Can either be a vector of row
captions provided \code{c()}, a vector of row indices, or a helper function
focused on selections. The select helper functions are:
\code{\link{starts_with}()}, \code{\link{ends_with}()},
\code{\link{contains}()}, \code{\link{matches}()}, \code{\link{one_of}()},
and \code{\link{everything}()}. We can also use expressions to filter down
to the rows we need (e.g., \code{[colname_1] > 100 & [colname_2] < 50}).}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
Any Markdown-formatted text in the incoming cells will be transformed to the
appropriate output type during render when using \code{fmt_markdown()}.
}
\details{
Targeting of values is done through \code{columns} and additionally by
\code{rows} (if nothing is provided for \code{rows} then entire columns are
selected). A number of helper functions exist to make targeting more
effective. Conditional formatting is possible by providing a conditional
expression to the \code{rows} argument. See the Arguments section for more
information on this.
}
\section{Figures}{

\if{html}{\figure{man_fmt_markdown_1.svg}{options: width=100\%}}
}

\examples{
# Create a few Markdown-based
# text snippets
text_1a <- "
### This is Markdown.

Markdown’s syntax is comprised entirely of
punctuation characters, which punctuation
characters have been carefully chosen so as
to look like what they mean... assuming
you’ve ever used email.
"

text_1b <- "
Info on Markdown syntax can be found
[here](https://daringfireball.net/projects/markdown/).
"

text_2a <- "
The **gt** package has these datasets:

 - `countrypops`
 - `sza`
 - `gtcars`
 - `sp500`
 - `pizzaplace`
 - `exibble`
"

text_2b <- "
There's a quick reference [here](https://commonmark.org/help/).
"

# Arrange the text snippets as a tibble
# using the `dplyr::tribble()` function;
# then, create a gt table and format
# all columns with `fmt_markdown()`
tab_1 <-
  dplyr::tribble(
    ~Markdown, ~md,
    text_1a,   text_2a,
    text_1b,   text_2b,
  ) \%>\%
    gt() \%>\%
    fmt_markdown(columns = TRUE) \%>\%
    tab_options(table.width = px(400))

}
\seealso{
Other data formatting functions: \code{\link{data_color}},
  \code{\link{fmt_currency}}, \code{\link{fmt_datetime}},
  \code{\link{fmt_date}}, \code{\link{fmt_missing}},
  \code{\link{fmt_number}}, \code{\link{fmt_passthrough}},
  \code{\link{fmt_percent}}, \code{\link{fmt_scientific}},
  \code{\link{fmt_time}}, \code{\link{fmt}},
  \code{\link{text_transform}}
}
\concept{data formatting functions}
