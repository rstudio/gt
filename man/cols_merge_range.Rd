% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_columns.R
\name{cols_merge_range}
\alias{cols_merge_range}
\title{Merge two columns to a value range column}
\usage{
cols_merge_range(data, col_begin, col_end)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{col_begin}{a column that contains values for the start of the range.}

\item{col_end}{a column that contains values for the end of the range.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
The \code{cols_merge_range()} function is a specialized variant of the
\code{\link{cols_merge}()} function. It operates by taking a two columns that
constitute a range of values (\code{col_begin} and \code{col_end}) and merges
them into a single column. What results is a column containing both values
separated by a long dash (e.g., \code{12.0 â€” 20.0}). The column specified in
\code{col_end} is dropped from the output table.
}
\details{
This function could be somewhat replicated using \code{\link{cols_merge}()},
however, \code{cols_merge_range()} employs the following specialized
semantics for \code{NA} handling:

\enumerate{

\item \code{NA}s in \code{col_begin} result in missing values for the merged
column (e.g., \code{NA} + \code{20.0} = \code{NA})

\item \code{NA}s in \code{col_end} (but not \code{col_begin}) result in
a display of only the \code{col_begin} values only for the merged column
(e.g., \code{12.0} + \code{NA} = \code{12.0})

\item \code{NA}s both \code{col_begin} and \code{col_end} result in
missing values for the merged column (e.g., \code{NA} + \code{NA} =
\code{NA})
}

Any resulting \code{NA} values in the \code{col_begin} column following the
merge operation can be easily formatted using the \code{\link{fmt_missing}()}
function.

This function is part of a set of three column-merging functions. The other
two are the general \code{\link{cols_merge}()} function and the specialized
\code{\link{cols_merge_uncert}()} function. These functions operate
similarly, where the second column specified is dropped from the output
table. For all of the \code{cols_merge*()} functions, column removal occurs
late in the rendering lifecycle so those secondary columns are still usable
as column references (e.g., inside expressions provided to `rows` in the
\code{fmt*()} functions).
}
\section{Figures}{

\if{html}{\figure{man_cols_merge_range_1.svg}{options: width=100\%}}
}

\examples{
# Use `gtcars` to create a gt table,
# keeping only the `model`, `mpg_c`,
# and `mpg_h` columns; merge the mpg
# columns together as a single range
# column (which is labeled as MPG,
# in italics)
tab_1 <-
  gtcars \%>\%
  dplyr::select(model, starts_with("mpg")) \%>\%
  dplyr::slice(1:8) \%>\%
  gt() \%>\%
  cols_merge_range(
    col_begin = vars(mpg_c),
    col_end = vars(mpg_h)) \%>\%
  cols_label(
    mpg_c = md("*MPG*")
  )

}
\seealso{
Other column modification functions: \code{\link{cols_align}},
  \code{\link{cols_hide}}, \code{\link{cols_label}},
  \code{\link{cols_merge_uncert}},
  \code{\link{cols_merge}}, \code{\link{cols_move_to_end}},
  \code{\link{cols_move_to_start}},
  \code{\link{cols_move}}, \code{\link{cols_split_delim}}
}
\concept{column modification functions}
