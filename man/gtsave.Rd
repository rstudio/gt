% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{gtsave}
\alias{gtsave}
\title{Save a \strong{gt} table as a file}
\usage{
gtsave(data, filename, path = NULL, ...)
}
\arguments{
\item{data}{A table object that is created using the \code{\link[=gt]{gt()}} function.}

\item{filename}{The file name to create on disk. Ensure that an extension
compatible with the output types is provided (\code{.html}, \code{.tex}, \code{.ltx},
\code{.rtf}). If a custom save function is provided then the file extension is
disregarded.}

\item{path}{An optional path to which the file should be saved (combined with
filename).}

\item{...}{All other options passed to the appropriate internal saving
function.}
}
\description{
The \code{gtsave()} function makes it easy to save a \strong{gt} table to a file. The
function guesses the file type by the extension provided in the output
filename, producing either an HTML, PDF, PNG, LaTeX, or RTF file.
}
\details{
Output filenames with either the \code{.html} or \code{.htm} extensions will produce an
HTML document. In this case, we can pass a \code{TRUE} or \code{FALSE} value to the
\code{inline_css} option to obtain an HTML document with inlined CSS styles (the
default is \code{FALSE}). More details on CSS inlining are available at
\code{\link[=as_raw_html]{as_raw_html()}}. We can pass values to arguments in \code{\link[htmltools:save_html]{htmltools::save_html()}}
through the \code{...}. Those arguments are either \code{background} or \code{libdir},
please refer to the \strong{htmltools} documentation for more details on the use
of these arguments.

We can create an image file based on the HTML version of the \code{gt} table. With
the filename extension \code{.png}, we get a PNG image file. A PDF document can be
generated by using the \code{.pdf} extension. This process is facilitated by the
\strong{webshot} package, so, this package needs to be installed before
attempting to save any table as an image file. There is the option of passing
values to the underlying \code{\link[webshot:webshot]{webshot::webshot()}} function though \code{...}. Some of
the more useful arguments for PNG saving are \code{zoom} (defaults to a scale
level of \code{2}) and \code{expand} (adds whitespace pixels around the cropped table
image, and has a default value of \code{5}). There are several more options
available so have a look at the \strong{webshot} documentation for further
details.

If the output filename extension is either of \code{.tex}, \code{.ltx}, or \code{.rnw}, a
LaTeX document is produced. An output filename of \code{.rtf} will generate an RTF
document. The LaTeX and RTF saving functions don't have any options to pass
to \code{...}.
}
\section{Function ID}{

13-1
}

\examples{
\dontrun{
# Use `gtcars` to create a gt table; add
# a stubhead label to describe what is
# in the stub
tab_1 <-
  gtcars \%>\%
  dplyr::select(model, year, hp, trq) \%>\%
  dplyr::slice(1:5) \%>\%
  gt(rowname_col = "model") \%>\%
  tab_stubhead_label(label = "car")

# Get an HTML file with inlined CSS
# (which is necessary for including the
# table as part of an HTML email)
tab_1 \%>\%
  gtsave("tab_1.html", inline_css = TRUE)

# By leaving out the `inline_css` option,
# we get a more conventional HTML file
# with embedded CSS styles
tab_1 \%>\% gtsave("tab_1.html")

# Save the HTML table as a PDF file; we
# can optionally add a separate `path`
tab_1 \%>\% gtsave("tab_1.pdf", path = "~")

# Saving as PNG file results in a cropped
# image of an HTML table; the amount of
# whitespace can be set
tab_1 \%>\% gtsave("tab_1.png", expand = 10)

# Any use of the `.tex`, `.ltx`, or `.rnw`
# will result in the output of a LaTeX
# document
tab_1 \%>\% gtsave("tab_1.tex")
}

}
\seealso{
Other Export Functions: 
\code{\link{as_latex}()},
\code{\link{as_raw_html}()},
\code{\link{as_rtf}()},
\code{\link{extract_summary}()}
}
\concept{Export Functions}
