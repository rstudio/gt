% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_style.R
\name{tab_style}
\alias{tab_style}
\title{Add custom styles to one or more cells}
\usage{
tab_style(data, style, locations)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{style}{a vector of styles to use. The \code{\link{cells_styles}()}
helper function can be used here to more easily generate valid styles.}

\item{locations}{the cell or set of cells to be associated with the style
Supplying an object with the \code{\link{cells_data}()} helper function is
a useful way to specify the cell that is associated with the style.
Additionally, we can supply a list with multiple calls to
\code{\link{cells_data}()} if we wish to combine multiple cell selections.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
Add custom styles to one or more cells
}
\section{Figures}{

\if{html}{\figure{man_tab_style_1.svg}{options: width=100\%}}

\if{html}{\figure{man_tab_style_2.svg}{options: width=100\%}}
}

\examples{
# Use `exibble` to create a gt table;
# add styles that are to be applied
# to data cells that satisfy a
# condition (using `tab_style()`)
tab_1 <-
  exibble \%>\%
  dplyr::select(num, currency) \%>\%
  gt() \%>\%
  fmt_number(
    columns = vars(num, currency),
    decimals = 1
  ) \%>\%
  tab_style(
    style = cells_styles(
      bkgd_color = "lightcyan",
      text_weight = "bold"),
    locations = cells_data(
      columns = vars(num),
      rows = num >= 5000)
  ) \%>\%
  tab_style(
    style = cells_styles(
      bkgd_color = "#F9E3D6",
      text_style = "italic"),
    locations = cells_data(
      columns = vars(currency),
      rows = currency < 100)
  )

# Use `sp500` to create a gt table;
# color entire rows of cells based
# on values in a particular column
tab_2 <-
  sp500 \%>\%
  dplyr::filter(
    date >= "2015-12-01" &
    date <= "2015-12-15"
  ) \%>\%
  dplyr::select(-c(adj_close, volume)) \%>\%
  dplyr::mutate(date = as.character(date)) \%>\%
  gt() \%>\%
  tab_style(
    style = cells_styles(
      bkgd_color = "lightgreen"),
    locations = cells_data(
      rows = close > open)
  ) \%>\%
  tab_style(
    style = cells_styles(
      bkgd_color = "crimson",
      text_color = "white"),
    locations = cells_data(
      rows = open > close)
  )

}
\seealso{
\code{\link{cells_styles}()} as a helper for defining custom styles
  and \code{\link{cells_data}()} as a useful helper function for targeting
  one or more data cells to be styled.

Other table-part creation/modification functions: \code{\link{gt_preview}},
  \code{\link{gt}}, \code{\link{tab_footnote}},
  \code{\link{tab_header}}, \code{\link{tab_options}},
  \code{\link{tab_row_group}},
  \code{\link{tab_source_note}}, \code{\link{tab_spanner}},
  \code{\link{tab_stubhead_label}}
}
\concept{table-part creation/modification functions}
