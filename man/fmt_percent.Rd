% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_data.R
\name{fmt_percent}
\alias{fmt_percent}
\title{Format values as a percentage}
\usage{
fmt_percent(data, columns, rows = NULL, decimals = 2,
  drop_trailing_zeros = FALSE, negative_val = "signed",
  use_seps = TRUE, pattern = "{x}", sep_mark = ",", dec_mark = ".",
  incl_space = FALSE, placement = "right", locale = NULL)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{columns}{the columns to format. Can either be a series of column names
provided in \code{vars()}, a vector of column indices, or a helper function
focused on selections. The select helper functions are:
\code{\link{starts_with}()}, \code{\link{ends_with}()},
\code{\link{contains}()}, \code{\link{matches}()}, \code{\link{one_of}()},
and \code{\link{everything}()}.}

\item{rows}{optional rows to format. Not providing any value results in all
rows in \code{columns} being formatted. Can either be a vector of row
captions provided \code{c()}, a vector of row indices, or a helper function
focused on selections. The select helper functions are:
\code{\link{starts_with}()}, \code{\link{ends_with}()},
\code{\link{contains}()}, \code{\link{matches}()}, \code{\link{one_of}()},
and \code{\link{everything}()}. We can also use expressions to filter down
to the rows we need (e.g., \code{[colname_1] > 100 & [colname_2] < 50}).}

\item{decimals}{an option to specify the exact number of decimal places to
use. The default number of decimal places is \code{2}.}

\item{drop_trailing_zeros}{a logical value that allows for removal of
trailing zeros (those redundant zeros after the decimal mark).}

\item{negative_val}{the formatting to use for negative values. With
\code{signed} (the default), negative values will be shown with a negative
sign. Using \code{parens} will show the negative value in parentheses.}

\item{use_seps}{an option to use digit group separators. The type of digit
group separator is set by \code{sep_mark} and overridden if a locale ID is
provided to \code{locale}. This setting is \code{TRUE} by default.}

\item{pattern}{a formatting pattern that allows for decoration of the
formatted value. The value itself is represented by \code{{x}} and all
other characters are taken to be string literals.}

\item{sep_mark}{the mark to use as a separator between groups of digits.}

\item{dec_mark}{the character to use as a decimal mark.}

\item{incl_space}{an option on whether to include a space between the value
and the percent sign. The default is to not introduce a space character.}

\item{placement}{the placement of the percent sign. This can be either be
\code{right} (the default) or \code{left}.}

\item{locale}{an optional locale ID that can be used for formatting the value
according the locale's rules. Examples include \code{"en_US"} for English
(United States) and \code{"fr_FR"} for French (France). The use of a valid
locale ID will override any values provided in \code{sep_mark} and
\code{dec_mark}.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
With numeric values in a \pkg{gt} table, we can perform percentage-based
formatting. The targeted values are scaled by \code{100} and are rendered
with the following options:
\itemize{
\item percent sign placement: the percent sign can be placed after or
before the values and a space can be inserted between the symbol and the
value.
\item decimals: choice of the number of decimal places, option to drop
trailing zeros, and a choice of the decimal symbol
\item negative values: choice of a negative sign or parentheses for values
less than zero
\item digit grouping separators: options to enable/disable digit separators
and provide a choice of separator symbol
\item pattern: option to use a text pattern for decoration of the formatted
values
\item locale-based formatting: providing a locale ID will result in number
formatting specific to the chosen locale
}
}
\details{
Targeting of values is done through \code{columns} and additionally by
\code{rows} (if nothing is provided for \code{rows} then entire columns are
selected). A number of helper functions exist to make targeting more
effective. Conditional formatting is possible by providing a conditional
expression to the \code{rows} argument. See the Arguments section for more
information on this.
}
\section{Figures}{

\if{html}{\figure{man_fmt_percent_1.svg}{options: width=100\%}}
}

\examples{
# Use `exibble` to create a gt table;
# format the `num` column to have
# percentage values in the first five
# of its rows
tab_1 <-
  exibble \%>\%
  gt() \%>\%
  fmt_percent(
    columns = vars(num),
    rows = 1:5,
    decimals = 1,
    drop_trailing_zeros = TRUE
  )

}
\seealso{
Other data formatting functions: \code{\link{data_color}},
  \code{\link{fmt_currency}}, \code{\link{fmt_datetime}},
  \code{\link{fmt_date}}, \code{\link{fmt_missing}},
  \code{\link{fmt_number}}, \code{\link{fmt_passthrough}},
  \code{\link{fmt_scientific}}, \code{\link{fmt_time}},
  \code{\link{fmt}}, \code{\link{text_transform}}
}
\concept{data formatting functions}
