% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opts.R
\name{opt_table_font}
\alias{opt_table_font}
\title{Options to define font choices for the entire table}
\usage{
opt_table_font(
  data,
  font = NULL,
  stack = NULL,
  size = NULL,
  weight = NULL,
  style = NULL,
  color = NULL,
  add = TRUE
)
}
\arguments{
\item{data}{\emph{The gt table data object}

\verb{obj:<gt_tbl>} // \strong{required}

This is the \strong{gt} table object that is commonly created through use of the
\code{\link[=gt]{gt()}} function.}

\item{font}{\emph{Default table fonts}

\verb{vector<character>|list|obj:<font_css>} // \emph{default:} \code{NULL} (\code{optional})

One or more font names available as system or web fonts. These can be
combined with a \code{c()} or a \code{list()}. To choose fonts from the
\emph{Google Fonts} service, we can call the \code{\link[=google_font]{google_font()}} helper function.}

\item{stack}{\emph{Name of font stack}

\verb{scalar<character>} // \emph{default:} \code{NULL} (\code{optional})

A name that is representative of a font stack (obtained via internally via
the \code{\link[=system_fonts]{system_fonts()}} helper function). If provided, this new stack will
replace any defined fonts and any \code{font} values will be prepended.}

\item{size}{\emph{Text size}

\verb{scalar<character|numeric|integer>} // \emph{default:} \code{NULL} (\code{optional})

The text size for the entire table can be set by providing a \code{size} value.
Can be specified as a single-length character vector with units of pixels
(e.g., \verb{12px}) or as a percentage (e.g., \verb{80\%}). If provided as a
single-length numeric vector, it is assumed that the value is given in
units of pixels. The \code{\link[=px]{px()}} and \code{\link[=pct]{pct()}} helper functions can also be used
to pass in numeric values and obtain values as pixel or percentage units.}

\item{weight}{\emph{Text weight}

\verb{scalar<character|numeric|integer>} // \emph{default:} \code{NULL} (\code{optional})

Option to set the weight of the font. Can be a text-based keyword such as
\code{"normal"}, \code{"bold"}, \code{"lighter"}, \code{"bolder"}, or, a numeric value between
\code{1} and \code{1000}, inclusive. Please note that typefaces have varying support
for the numeric mapping of weight.}

\item{style}{\emph{Text style}

\verb{scalar<character>} // \emph{default:} \code{NULL} (\code{optional})

An option to modify the text style. Can be one of either \code{"normal"},
\code{"italic"}, or \code{"oblique"}.}

\item{color}{\emph{Text color}

\verb{scalar<character>} // \emph{default:} \code{NULL} (\code{optional})

The \code{color} option defines the text color used throughout the table. A
color name or a hexadecimal color code should be provided.}

\item{add}{\emph{Add to existing fonts}

\verb{scalar<logical>} // \emph{default:} \code{TRUE}

Should fonts be added to the beginning of any already-defined fonts for the
table? By default, this is \code{TRUE} and is recommended since those fonts
already present can serve as fallbacks when everything specified in \code{font}
is not available. If a \code{stack} is provided, then \code{add} will automatically
set to \code{FALSE}.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
\code{opt_table_font()} makes it possible to define fonts used for an entire
\strong{gt} table. Any font names supplied in \code{font} will (by default, with
\code{add = TRUE}) be placed before the names present in the existing font stack
(i.e., they will take precedence). You can choose to base the font stack on
those provided by \code{\link[=system_fonts]{system_fonts()}} by providing a valid keyword for a themed
set and optionally prepending \code{font} values to that.

Take note that you could still have entirely different fonts in specific
locations of the table. For that you would need to use \code{\link[=tab_style]{tab_style()}} or
\code{\link[=tab_style_body]{tab_style_body()}} in conjunction with \code{\link[=cell_text]{cell_text()}}.
}
\section{Possibilities for the \code{font} argument}{


We have the option to supply one or more font names for the \code{font} argument.
They can be enclosed in \code{c()} or a \code{list()}. You can generate this list or
vector with a combination of font names, and you can freely use
\code{\link[=google_font]{google_font()}}, \code{\link[=default_fonts]{default_fonts()}}, and \code{\link[=system_fonts]{system_fonts()}} to help compose
your font family.
}

\section{Possibilities for the \code{stack} argument}{


There are several themed font stacks available via the \code{\link[=system_fonts]{system_fonts()}}
helper function. That function can be used to generate all or a segment of a
vector supplied to the \code{font} argument. However, using the \code{stack} argument
with one of the 15 keywords for the font stacks available in
\code{system_fonts()}, we could be sure that the typeface class will work across
multiple computer systems. Any of the following keywords can be used:
\itemize{
\item \code{"system-ui"}
\item \code{"transitional"}
\item \code{"old-style"}
\item \code{"humanist"}
\item \code{"geometric-humanist"}
\item \code{"classical-humanist"}
\item \code{"neo-grotesque"}
\item \code{"monospace-slab-serif"}
\item \code{"monospace-code"}
\item \code{"industrial"}
\item \code{"rounded-sans"}
\item \code{"slab-serif"}
\item \code{"antique"}
\item \code{"didone"}
\item \code{"handwritten"}
}
}

\section{Examples}{


Use a subset of the \code{\link{sp500}} dataset to create a small \strong{gt} table. We'll
use \code{\link[=fmt_currency]{fmt_currency()}} to display a dollar sign for the first row of monetary
values. The \code{"Merriweather"} font (from \emph{Google Fonts}, via \code{\link[=google_font]{google_font()}})
with two system font fallbacks (\code{"Cochin"} and the generic \code{"serif"}).

\if{html}{\out{<div class="sourceCode r">}}\preformatted{sp500 |>
  dplyr::slice(1:10) |>
  dplyr::select(-volume, -adj_close) |>
  gt() |>
  fmt_currency(
    rows = 1,
    use_seps = FALSE
  ) |>
  opt_table_font(
    font = list(
      google_font(name = "Merriweather"),
      "Cochin", "serif"
    )
  )
}\if{html}{\out{</div>}}

\if{html}{\out{
<img src="https://raw.githubusercontent.com/rstudio/gt/master/images/man_opt_table_font_1.png" alt="This image of a table was generated from the first code example in the `opt_table_font()` help file." style="width:100\%;">
}}

With the \code{\link{sza}} dataset we'll create a two-column, eleven-row table. Within
\code{opt_table_font()}, the \code{stack} argument will be supplied with the
\code{"rounded-sans"} font stack. This sets up a family of fonts with rounded,
curved letterforms that should be locally available in different computing
environments.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{sza |>
  dplyr::filter(
    latitude == 20 &
      month == "jan" &
      !is.na(sza)
  ) |>
  dplyr::select(-latitude, -month) |>
  gt() |>
  opt_table_font(stack = "rounded-sans") |>
  opt_all_caps()
}\if{html}{\out{</div>}}

\if{html}{\out{
<img src="https://raw.githubusercontent.com/rstudio/gt/master/images/man_opt_table_font_2.png" alt="This image of a table was generated from the second code example in the `opt_table_font()` help file." style="width:100\%;">
}}
}

\section{Function ID}{

10-12
}

\section{Function Introduced}{

\code{v0.2.2} (August 5, 2020)
}

\seealso{
Other table option functions: 
\code{\link{opt_align_table_header}()},
\code{\link{opt_all_caps}()},
\code{\link{opt_css}()},
\code{\link{opt_footnote_marks}()},
\code{\link{opt_footnote_spec}()},
\code{\link{opt_horizontal_padding}()},
\code{\link{opt_interactive}()},
\code{\link{opt_row_striping}()},
\code{\link{opt_stylize}()},
\code{\link{opt_table_lines}()},
\code{\link{opt_table_outline}()},
\code{\link{opt_vertical_padding}()}
}
\concept{table option functions}
