% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/text_transform.R
\name{text_transform}
\alias{text_transform}
\title{Perform targeted text transformation with a function}
\usage{
text_transform(data, locations, fn)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{locations}{the cell or set of cells to be associated with the text
transformation. Supplying any of the \code{cells_*()} helper functions is a
useful way to target the location cells that are associated with the
footnote text. These helper functions are: \code{\link{cells_title}()},
\code{\link{cells_column_labels}()}, \code{\link{cells_group}()},
\code{\link{cells_stub}()}, \code{\link{cells_data}()}, and
\code{\link{cells_summary}()}. Please see the help article
\link{location_cells} for more information on how these helper functions
can be used. Additionally, we can enclose several \code{cells_*()} calls
within a \code{list()} if we wish to link the footnote text to different
types of locations (e.g., cell data values, stub group headings, the table
title, etc.).}

\item{fn}{the function to use for text transformation.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
Perform targeted text transformation with a function
}
\section{Figures}{

\if{html}{\figure{man_text_transform_1.svg}{options: width=100\%}}
}

\examples{
# Use `exibble` to create a gt table;
# transform the formatted text in the
# `num` and `currency` columns using
# a function within `text_transform()`,
# where `x` is a formatted vector of
# column values
tab_1 <-
  exibble \%>\%
  dplyr::select(num, char, currency) \%>\%
  dplyr::slice(1:4) \%>\%
  gt() \%>\%
  fmt_number(columns = vars(num)) \%>\%
  fmt_currency(columns = vars(currency)) \%>\%
  text_transform(
    locations = cells_data(
      columns = vars(num)),
    fn = function(x) {

      paste0(
        x, " (",
        dplyr::case_when(
          x > 20   ~ "large",
          x <= 20  ~ "small"),
        ")")
    }
  ) \%>\%
  text_transform(
    locations = cells_data(
      columns = vars(currency)),
    fn = function(x) {

      ifelse(
        grepl(",", x),
        gsub("\\\\.\\\\d\\\\d", "", x),
        x)
    }
  )

}
\seealso{
Other data formatting functions: \code{\link{data_color}},
  \code{\link{fmt_currency}}, \code{\link{fmt_datetime}},
  \code{\link{fmt_date}}, \code{\link{fmt_missing}},
  \code{\link{fmt_number}}, \code{\link{fmt_passthrough}},
  \code{\link{fmt_percent}}, \code{\link{fmt_scientific}},
  \code{\link{fmt_time}}, \code{\link{fmt}}
}
\concept{data formatting functions}
