% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_data.R
\name{fmt_currency}
\alias{fmt_currency}
\title{Format values as currencies}
\usage{
fmt_currency(
  data,
  columns,
  rows = NULL,
  currency = "USD",
  use_subunits = TRUE,
  accounting = FALSE,
  decimals = NULL,
  use_seps = TRUE,
  scale_by = 1,
  suffixing = FALSE,
  pattern = "{x}",
  sep_mark = ",",
  dec_mark = ".",
  placement = "left",
  incl_space = FALSE,
  locale = NULL
)
}
\arguments{
\item{data}{A table object that is created using the \code{\link[=gt]{gt()}} function.}

\item{columns}{The columns to format. Can either be a series of column names
provided in \code{\link[=vars]{vars()}}, a vector of column indices, or a helper function
focused on selections. The select helper functions are: \code{\link[=starts_with]{starts_with()}},
\code{\link[=ends_with]{ends_with()}}, \code{\link[=contains]{contains()}}, \code{\link[=matches]{matches()}}, \code{\link[=one_of]{one_of()}}, and \code{\link[=everything]{everything()}}.}

\item{rows}{Optional rows to format. Not providing any value results in all
rows in \code{columns} being formatted. Can either be a vector of row captions
provided \code{\link[=c]{c()}}, a vector of row indices, or a helper function focused on
selections. The select helper functions are: \code{\link[=starts_with]{starts_with()}},
\code{\link[=ends_with]{ends_with()}}, \code{\link[=contains]{contains()}}, \code{\link[=matches]{matches()}}, \code{\link[=one_of]{one_of()}}, and \code{\link[=everything]{everything()}}.
We can also use expressions to filter down to the rows we need (e.g.,
\verb{[colname_1] > 100 & [colname_2] < 50}).}

\item{currency}{The currency to use for the numeric value. This input can be
supplied as a 3-letter currency code (e.g., \code{"USD"} for U.S. Dollars,
\code{"EUR"} for the Euro currency). Use \code{\link[=info_currencies]{info_currencies()}} to get an
information table with all of the valid currency codes and examples of
each. Alternatively, we can provide a common currency name (e.g.,
\code{"dollar"}, \code{"pound"}, \code{"yen"}, etc.) to simplify the process. Use
\code{\link[=info_currencies]{info_currencies()}} with the \code{type == "symbol"} option to view an
information table with all of the supported currency symbol names along
with examples.

We can also use the \code{\link[=currency]{currency()}} helper function to specify a custom
currency, where the string could vary across output contexts. For example,
using \code{currency(html = "&fnof;", default = "f")} would give us a suitable
glyph for the Dutch guilder in an HTML output table, and it would simply be
the letter "f" in all other output contexts). Please note that \code{decimals}
will default to \code{2} when using the \code{\link[=currency]{currency()}} helper function.

If nothing is provided to \code{currency} then \code{"USD"} (U.S. dollars) will be
used.}

\item{use_subunits}{An option for whether the subunits portion of a currency
value should be displayed. By default, this is \code{TRUE}.}

\item{accounting}{An option to use accounting style for currency values. With
\code{FALSE} (the default), negative values will be shown with a minus sign.
Using \code{accounting = TRUE} will put negative values in parentheses.}

\item{decimals}{An option to specify the exact number of decimal places to
use. The default number of decimal places is \code{2}.}

\item{use_seps}{An option to use digit group separators. The type of digit
group separator is set by \code{sep_mark} and overridden if a locale ID is
provided to \code{locale}. This setting is \code{TRUE} by default.}

\item{scale_by}{A value to scale the input. The default is \code{1.0}. All numeric
values will be multiplied by this value first before undergoing formatting.
This value will be ignored if using any of the \code{suffixing} options (i.e.,
where \code{suffixing} is not set to \code{FALSE}).}

\item{suffixing}{An option to scale and apply suffixes to larger numbers
(e.g., \code{1924000} can be transformed to \verb{1.92M}). This option can accept a
logical value, where \code{FALSE} (the default) will not perform this
transformation and \code{TRUE} will apply thousands (\code{K}), millions (\code{M}),
billions (\code{B}), and trillions (\code{T}) suffixes after automatic value scaling.
We can also specify which symbols to use for each of the value ranges by
using a character vector of the preferred symbols to replace the defaults
(e.g., \code{c("k", "Ml", "Bn", "Tr")}).

Including \code{NA} values in the vector will ensure that the particular range
will either not be included in the transformation (e.g, \code{c(NA, "M", "B", "T")} won't modify numbers in the thousands range) or the range will
inherit a previous suffix (e.g., with \code{c("K", "M", NA, "T")}, all numbers
in the range of millions and billions will be in terms of millions).

Any use of \code{suffixing} (where it is not set expressly as \code{FALSE}) means
that any value provided to \code{scale_by} will be ignored.}

\item{pattern}{A formatting pattern that allows for decoration of the
formatted value. The value itself is represented by \code{{x}} and all other
characters are taken to be string literals.}

\item{sep_mark}{The mark to use as a separator between groups of digits
(e.g., using \code{sep_mark = ","} with \code{1000} would result in a formatted value
of \verb{1,000}).}

\item{dec_mark}{The character to use as a decimal mark (e.g., using \code{dec_mark = ","} with \code{0.152} would result in a formatted value of \verb{0,152}).}

\item{placement}{The placement of the currency symbol. This can be either be
\code{left} (the default) or \code{right}.}

\item{incl_space}{An option for whether to include a space between the value
and the currency symbol. The default is to not introduce a space character.}

\item{locale}{An optional locale ID that can be used for formatting the value
according the locale's rules. Examples include \code{"en_US"} for English
(United States) and \code{"fr_FR"} for French (France). The use of a valid
locale ID will override any values provided in \code{sep_mark} and \code{dec_mark}.
We can use the \code{\link[=info_locales]{info_locales()}} function as a useful reference for all of
the locales that are supported.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
With numeric values in a \strong{gt} table, we can perform currency-based
formatting. This function supports both automatic formatting with a
three-letter or numeric currency code. We can also specify a custom currency
that is formatted according to the output context with the \code{\link[=currency]{currency()}}
helper function. Numeric formatting facilitated through the use of a locale
ID. We have fine control over the conversion from numeric values to currency
values, where we could take advantage of the following options:
\itemize{
\item the currency: providing a currency code or common currency name will
procure the correct currency symbol and number of currency subunits; we could
also use the \code{\link[=currency]{currency()}} helper function to specify a custom currency
\item currency symbol placement: the currency symbol can be placed before
or after the values
\item decimals/subunits: choice of the number of decimal places, and a
choice of the decimal symbol, and an option on whether to include or exclude
the currency subunits (decimal portion)
\item negative values: choice of a negative sign or parentheses for values
less than zero
\item digit grouping separators: options to enable/disable digit separators
and provide a choice of separator symbol
\item scaling: we can choose to scale targeted values by a multiplier value
\item large-number suffixing: larger figures (thousands, millions, etc.) can
be autoscaled and decorated with the appropriate suffixes
\item pattern: option to use a text pattern for decoration of the formatted
currency values
\item locale-based formatting: providing a locale ID will result in
currency formatting specific to the chosen locale
}
We can use the \code{\link[=info_currencies]{info_currencies()}} function for a useful reference on all of
the possible inputs to the \code{currency} argument.
}
\details{
Targeting of values is done through \code{columns} and additionally by \code{rows} (if
nothing is provided for \code{rows} then entire columns are selected). A number of
helper functions exist to make targeting more effective. Conditional
formatting is possible by providing a conditional expression to the \code{rows}
argument. See the Arguments section for more information on this.
}
\section{Figures}{

\if{html}{\figure{man_fmt_currency_1.png}{options: width=100\%}}

\if{html}{\figure{man_fmt_currency_2.png}{options: width=100\%}}
}

\section{Function ID}{

3-4
}

\examples{
# Use `exibble` to create a gt table;
# format the `currency` column to have
# currency values in euros (EUR)
tab_1 <-
  exibble \%>\%
  gt() \%>\%
  fmt_currency(
    columns = vars(currency),
    currency = "EUR"
  )

# Use `exibble` to create a gt table;
# Keep only the `num` and `currency`,
# columns, then, format those columns
# using the "CNY" and "GBP" currencies
tab_2 <-
  exibble \%>\%
  dplyr::select(num, currency) \%>\%
  gt() \%>\%
  fmt_currency(
    columns = vars(num),
    currency = "CNY"
  ) \%>\%
  fmt_currency(
    columns = vars(currency),
    currency = "GBP"
  )

}
\seealso{
Other Format Data: 
\code{\link{data_color}()},
\code{\link{fmt_datetime}()},
\code{\link{fmt_date}()},
\code{\link{fmt_markdown}()},
\code{\link{fmt_missing}()},
\code{\link{fmt_number}()},
\code{\link{fmt_passthrough}()},
\code{\link{fmt_percent}()},
\code{\link{fmt_scientific}()},
\code{\link{fmt_time}()},
\code{\link{fmt}()},
\code{\link{text_transform}()}
}
\concept{Format Data}
