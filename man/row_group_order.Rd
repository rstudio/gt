% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_rows.R
\name{row_group_order}
\alias{row_group_order}
\title{Modify the ordering of any row groups}
\usage{
row_group_order(data, groups)
}
\arguments{
\item{data}{a table object that is created using the \code{\link{gt}()}
function.}

\item{groups}{a vector of row group names, or, a numeric vector of indices
corresponding to the new ordering. Either vector must correspond to
assigned group names or the index positions. Also, either type of vector is
not required to have all of the row group names or available index
positions within it; any omitted values will be added to the end while
preserving the original ordering.}
}
\value{
an object of class \code{gt_tbl}.
}
\description{
We can modify the display order of any row groups in a \pkg{gt} object with
the \code{row_group_order()} function. The \code{groups} argument can either
take a vector of row group names or a numeric vector of row group indices;
whichever is provided, the row groups will adhere to this revised ordering.
It isn't necessary to provide all row group names in \code{groups}, rather,
what is provided will assume the specified ordering at the top of the table
and the remaining row groups will follow in their original ordering.
}
\section{Figures}{

\if{html}{\figure{man_row_group_order_1.svg}{options: width=100\%}}
}

\examples{
# Use `exibble` to create a gt table
# with a stub and with row groups;
# modify the order of the row groups
# with `row_group_order()`, specifying
# the new ordering in `groups`
tab_1 <-
  exibble \%>\%
  dplyr::select(char, currency, row, group) \%>\%
    gt(
      rowname_col = "row",
      groupname_col = "group"
    ) \%>\%
    row_group_order(
      groups = c("grp_b", "grp_a")
    )

}
\concept{row modification functions}
